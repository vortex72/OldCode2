@model eClub.Models.Client

@{ 
    var now = DateTime.Now;
    var lYearsAgo = Enumerable.Range(18, 89).Select(x => new SelectListItem { Value = (now.Year - x).ToString(), Text = (now.Year - x).ToString() });
    var lYearsForward = Enumerable.Range(0, 12).Select(x => new SelectListItem { Value = (now.Year + x).ToString(), Text = (now.Year + x).ToString() });
    var lMonths = Enumerable.Range(1, 12).Select(x => new SelectListItem { Text = x.ToString("00"), Value = x.ToString() });
    var lDays = Enumerable.Range(1, 31).Select(x => new SelectListItem { Text = x.ToString("00"), Value = x.ToString() });
}

@using eClub.Models

<div class="row">
    <div class="col-md-8">
        <div class="box box-primary">
            <div class="box-header with-border">
                Datos Personales
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-2">
                        @Html.Label("Sexo", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.DropDownListFor(model => model.dGender_ID, 
                                                new SelectList((IEnumerable<DescriptionTables>)System.Web.HttpContext.Current.Items["dGender"], "DescTableID", "DescTableSpanish"), 
                                                "SELECCIONE")
                        @Html.ValidationMessageFor(model => model.dGender_ID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Doc. Identidad", htmlAttributes: new { @class = "control-label h6" })
                        @Html.EditorFor(model => model.mClient_IdentityCardNumber, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.mClient_IdentityCardNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Primer Nombre", htmlAttributes: new { @class = "control-label h6" })
                        @Html.EditorFor(model => model.mClient_FirstName, new { htmlAttributes = new { @class = "form-control input-sm", @style = "text-transform: uppercase", @maxlength = "30" } })
                        @Html.ValidationMessageFor(model => model.mClient_FirstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Segundo Nombre", htmlAttributes: new { @class = "control-label h6" })
                        @Html.EditorFor(model => model.mClient_MidleName, new { htmlAttributes = new { @class = "form-control input-sm", @style = "text-transform: uppercase", @maxlength = "30" } })
                        @Html.ValidationMessageFor(model => model.mClient_MidleName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @Html.Label("Primer Apellido", htmlAttributes: new { @class = "control-label h6" })
                        @Html.EditorFor(model => model.mClient_LastName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.mClient_LastName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Segundo Apellido", htmlAttributes: new { @class = "control-label h6" })
                        @Html.EditorFor(model => model.mClient_MaidenName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.mClient_MaidenName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Fecha de Nacimiento", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.DropDownList("BDayYear", lYearsAgo,"Año", new { onchange = "monthOrYearChanged('BDayYear', 'BDayMonth', 'BDayDay')" })
                        @Html.DropDownList("BDayMonth", lMonths, "Mes", new { onchange = "monthOrYearChanged('BDayYear', 'BDayMonth', 'BDayDay')" })
                        @Html.DropDownList("BDayDay", lDays, "Día")
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        @Html.Label("Estado Civil", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.DropDownListFor(model => model.dMaritalStatus_ID, 
                                                new SelectList((IEnumerable<DescriptionTables>)System.Web.HttpContext.Current.Items["dMaritalStatus"], "DescTableID", "DescTableSpanish"), 
                                                "SELECCIONE")
                            @Html.ValidationMessageFor(model => model.dMaritalStatus_ID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.Label("Nacionalidad", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.DropDownListFor(model => model.dCitizenship_ID, 
                                                new SelectList((IEnumerable<DescriptionTables>)System.Web.HttpContext.Current.Items["dCitizenship"], "DescTableID", "DescTableSpanish"), 
                                                "SELECCIONE")
                        @Html.ValidationMessageFor(model => model.dCitizenship_ID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.Label("Ingresos", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.DropDownListFor(model => model.dClientIncomeRange_ID, 
                                                new SelectList((IEnumerable<DescriptionTables>)System.Web.HttpContext.Current.Items["dClientIncomeRange"], "DescTableID", "DescTableSpanish"), 
                                                "SELECCIONE")
                        @Html.ValidationMessageFor(model => model.dClientIncomeRange_ID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.Label("Ocupación", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.DropDownListFor(model => model.dOccupation_ID, 
                                                new SelectList((IEnumerable<DescriptionTables>)System.Web.HttpContext.Current.Items["dOccupation"], "DescTableID", "DescTableSpanish"), 
                                                "SELECCIONE")
                        @Html.ValidationMessageFor(model => model.dOccupation_ID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @Html.Label("Origen", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.DropDownListFor(model => model.dClientSource_ID, 
                                                new SelectList((IEnumerable<DescriptionTables>)System.Web.HttpContext.Current.Items["dClientSource"], "DescTableID", "DescTableSpanish"), 
                                                "SELECCIONE")
                        @Html.ValidationMessageFor(model => model.dClientSource_ID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.Label("Hijos", htmlAttributes: new { @class = "control-label h6" })
                        @Html.EditorFor(model => model.mClient_ChildrenNumber, 
                                            new { htmlAttributes = new { @class = "form-control input-sm allownumericwithoutdecimal", @style = "text-align:left", @id = "Children" } })
                        @Html.ValidationMessageFor(model => model.mClient_ChildrenNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.Label(" ", htmlAttributes: new { @class = "control-label h6" }) <br />
                        @Html.CheckBoxFor(model => model.mClient_SendEMail, new { htmlAttributes = new { @class = "form-control icheckbox_flat" } })
                        @Html.Label(" Promociones por eMail", htmlAttributes: new { @class = "control-label h6" })
                        @Html.ValidationMessageFor(model => model.mClient_SendEMail, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.Label(" ", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.CheckBoxFor(model => model.mClient_SendSMS, new { htmlAttributes = new { @class = "form-control icheckbox_flat" } })
                        @Html.Label(" Promociones por SMS", htmlAttributes: new { @class = "control-label h6" })
                        @Html.ValidationMessageFor(model => model.mClient_SendSMS, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        @Html.Label("Correos del Cliente", htmlAttributes: new { @class = "control-label h6" })<br />
                        <div class="input-group input-group-sm">
                            <input type="text" class="form-control">
                            <span class="input-group-btn">
                                <button class="btn btn-facebook fa fa-plus-square" type="button"> </button>
                            </span>
                        </div><!-- /input-group --> <br />
                        @Html.ListBoxFor(model => model.mClientEmails,
                                            new SelectList((IEnumerable<DescriptionTables>)System.Web.HttpContext.Current.Items["dClientIncomeRange"], "DescTableID", "DescTableSpanish"),
                                            new { htmlAttributes = new { @class = "col-md-12" } }) <br />
                        @Html.ValidationMessageFor(model => model.dClientIncomeRange_ID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Teléfonos del Cliente", htmlAttributes: new { @class = "control-label h6" })<br />
                        <div class="input-group input-group-sm">
                            <input type="text" class="form-control">
                            <span class="input-group-btn">
                                <button class="btn btn-facebook fa fa-plus-square" type="button"> </button>
                            </span>
                        </div><!-- /input-group --> <br />
                        @Html.ListBoxFor(model => model.mClientPhoneNumbers,
                                            new SelectList((IEnumerable<DescriptionTables>)System.Web.HttpContext.Current.Items["dClientIncomeRange"], "DescTableID", "DescTableSpanish"),
                                            new { htmlAttributes = new { @class = "col-md-12" } }) <br />
                            @Html.ValidationMessageFor(model => model.dClientIncomeRange_ID, "", new { @class = "text-danger" })
</div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="box box-primary">
            <div class="box-header with-border">
                Datos Tarjeta
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
            <div class="box-body bg-light-blue">
                <div class="row">
                    <div class="col-md-6">
                        @Html.Label("Tipo Tarjeta", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.DropDownListFor(model => model.ClientCC.mCardType_ID, ViewBag.CardType as SelectList, "SELECCIONE")
                        @Html.ValidationMessageFor(model => model.ClientCC.mCardType_ID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Número Tarjeta", htmlAttributes: new { @class = "control-label h6" })
                        @Html.EditorFor(model => model.ClientCC.mClientCreditCard_Number, new { htmlAttributes = new { @class = "form-control input-sm allownumericwithoutdecimal", @style = "text-align:left", @maxlength = "20", @id = "CardNumber" } })
                        @Html.ValidationMessageFor(model => model.ClientCC.mClientCreditCard_Number, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.Label("Nombre en la Tarjeta", htmlAttributes: new { @class = "control-label h6" }) <br />
                        @Html.EditorFor(model => model.ClientCC.mClientCreditCard_HolderName, " ", new { htmlAttributes = new { @class = "form-control input-sm", @style = "text-transform: uppercase", @maxlength = "60" } })
                        @Html.ValidationMessageFor(model => model.ClientCC.mClientCreditCard_HolderName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        @Html.Label("Vencimiento", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.DropDownList(" ", lMonths, "Mes")
                        @Html.DropDownList(" ", lYearsForward, "Año")
                    </div>
                    <div class="col-md-3">
                        @Html.Label("CVC", htmlAttributes: new { @class = "control-label h6" })
                        @Html.EditorFor(model => model.ClientCC.mClientCreditCard_Number, new { htmlAttributes = new { @class = "form-control input-sm allownumericwithoutdecimal", @style = "text-align:left", @maxlength = "3", @id = "CVC" } })
                        @Html.ValidationMessageFor(model => model.ClientCC.mClientCreditCard_Number, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.Label("Emisor", htmlAttributes: new { @class = "control-label h6" })<br />
                        @Html.DropDownListFor(model => model.ClientCC.mIssuerBank_ID, ViewBag.IssuerBank as SelectList, "SELECCIONE")
                        @Html.ValidationMessageFor(model => model.ClientCC.mIssuerBank_ID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/datepicker")
@Scripts.Render("~/bundles/autonumeric")

<script>
    $(function () {
        //Date picker
        $('#BornDate').datepicker({language:'es', dateFormat: 'mm-dd'});
    });

    $(document).ready(function () {
        $.extend($.fn.autoNumeric.defaults, {
            aSep: '@System.Threading.Thread.CurrentThread.CurrentCulture.NumberFormat.NumberGroupSeparator',
            aDec: '@System.Threading.Thread.CurrentThread.CurrentCulture.NumberFormat.NumberDecimalSeparator'
        });
    });

    $(function () {
        $('#Children').autoNumeric('init', { wEmpty: 'zero' });
    });

    $(".allownumericwithoutdecimal").on("keypress keyup blur", function (event) {
        $(this).val($(this).val().replace(/^([^\d]|0)[^\d].+|[^\d].+/, ""));
        if ((event.which < 48 || event.which > 57) && event.which != 8 && event.which != 46) {
            event.preventDefault();
        }
    });

    function monthOrYearChanged(yearId, monthId, dayId) {
        dayId = "#" + dayId;
        monthId = "#" + monthId;
        yearId = "#" + yearId;
        var currentMonth = $(monthId).val();
        var currentDay = $(dayId).val();

        // Set the numbers of days in the day dropdown
        changeDayCount = function (numDays) {
            while ($(dayId).children().length > numDays) {
                $(dayId + " option:last").remove();
            }
            while ($(dayId).children().length < numDays) {
                $(dayId).append($("<option></option>").attr(
                    "value",
                    $(dayId).children().length + 1).text($(dayId).children().length + 1));
            }
        };

        // Adjust number of days based on month and year
        switch (currentMonth) {
            case "4":
            case "6":
            case "9":
            case "11":
                changeDayCount(30);
                break;
            case "2":
                var currentYear = $(yearId).val();
                // Check for leap year
                if (currentYear % 400 == 0 ||
                   (currentYear % 100 != 0 && currentYear % 4 == 0))
                    changeDayCount(29);
                else
                    changeDayCount(28);
                break;
            default:
                changeDayCount(31);
        }

        // Make sure the day value wasn't too high
        if (currentDay > $(dayId).children().length)
            $(dayId).val($(dayId).children().length);
    }
</script>